<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- BASIC INFORMATION ABOUT THE PROJECT -->

    <groupId>com.github.aneveux</groupId>
    <artifactId>cryptovery</artifactId>
    <version>0.3.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>Cryptovery</name>
    <description>Cryptovery - Sample of a JEE Application to be used for a training at the University.</description>
    <inceptionYear>2019</inceptionYear>

    <url>https://github.com/aneveux/cryptovery</url>

    <!-- TOOLING -->

    <issueManagement>
        <system>github</system>
        <url>https://github.com/aneveux/cryptovery/issues</url>
    </issueManagement>

    <ciManagement>
        <system>travis</system>
        <url>https://travis-ci.org/aneveux/cryptovery</url>
    </ciManagement>


    <!-- SCM CONNECTION -->

    <scm>
        <connection>scm:git:https://github.com/aneveux/cryptovery.git</connection>
        <developerConnection>scm:git:https://github.com/aneveux/cryptovery.git</developerConnection>
        <url>https://github.com/aneveux/cryptovery</url>
        <tag>HEAD</tag>
    </scm>

    <!-- LICENSE -->

    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <!-- DEVELOPERS -->

    <organization>
        <name>Example of an Organization</name>
        <url>https://yourwebsite.org</url>
    </organization>

    <developers>
        <developer>
            <name>Antoine Neveux</name>
            <id>aneveux</id>
            <url>https://github.com/aneveux</url>
        </developer>
    </developers>

    <!-- DISTRIBUTION -->

    <distributionManagement>
        <repository>
            <id>bintray-aneveux-maven</id>
            <name>aneveux-maven</name>
            <url>https://api.bintray.com/maven/aneveux/maven/cryptovery/;publish=1</url>
        </repository>
        <!-- https://www.jfrog.com/confluence/display/RTF/Deploying+Snapshots+to+oss.jfrog.org -->
        <snapshotRepository>
            <id>bintray-aneveux-maven</id>
            <name>jfrog-oss-snapshots</name>
            <url>https://oss.jfrog.org/artifactory/oss-snapshot-local</url>
        </snapshotRepository>
    </distributionManagement>

    <!-- REPOSITORIES -->

    <repositories>
        <repository>
            <id>apache-m2-snapshot</id>
            <name>Apache Snapshot Repository</name>
            <url>https://repository.apache.org/content/groups/snapshots</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>apache-m2-snapshot</id>
            <name>Apache Snapshot Repository</name>
            <url>https://repository.apache.org/content/groups/snapshots</url>
        </pluginRepository>
    </pluginRepositories>

    <!-- PROJECT PROPERTIES -->

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- versions -->
        <tomee.version>8.0.1</tomee.version>
        <openjpa.version>3.0.0</openjpa.version>
        <junit.jupiter.version>5.6.0</junit.jupiter.version>
        <!-- other properties -->
        <sonar.projectKey>cryptovery</sonar.projectKey>
        <sonar.organization>aneveux-github</sonar.organization>
        <docker.buildArg.WAR_LOCATION>target/${project.build.finalName}.war</docker.buildArg.WAR_LOCATION>
    </properties>

    <!-- DEPENDENCIES -->

    <dependencies>
        <dependency>
            <groupId>org.apache.tomee</groupId>
            <artifactId>javaee-api</artifactId>
            <version>8.0-3</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomee</groupId>
            <artifactId>tomee-embedded</artifactId>
            <version>${tomee.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomee</groupId>
            <artifactId>openejb-cxf-rs</artifactId>
            <version>${tomee.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomee</groupId>
            <artifactId>tomee-jaxrs</artifactId>
            <version>${tomee.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomee</groupId>
            <artifactId>ziplock</artifactId>
            <version>${tomee.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
            <version>2.5.1</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>2.5.1</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-moxy</artifactId>
            <version>2.30</version>
        </dependency>
        <!-- API, java.xml.bind module -->
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>2.3.2</version>
        </dependency>
        <!-- Runtime, com.sun.xml.bind module -->
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>3.0.1</version>
        </dependency>
    </dependencies>

    <!-- BUILD PLUGINS -->

    <build>
        <!-- GLOBAL BUILD CONFIGURATION -->
        <finalName>${project.artifactId}</finalName>
        <defaultGoal>package</defaultGoal>
        <plugins>
            <!-- BUILD HELPER -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <!-- sets the only.when.is.snapshot.used property to true if SNAPSHOT was used,
                            to the project version otherwise -->
                        <id>build-helper-regex-is-snapshot-used</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <configuration>
                            <name>is.snapshot</name>
                            <value>${project.version}</value>
                            <regex>.*-SNAPSHOT</regex>
                            <replacement>true</replacement>
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- COMPILER CONFIGURATION -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>13</source>
                    <target>13</target>
                </configuration>
            </plugin>
            <!-- DEPLOYER CONFIGURATION -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>3.0.0-M1</version>
                <configuration>
                    <!-- skip when version is SNAPSHOT -->
                    <!--suppress UnresolvedMavenProperty -->
                    <skip>${is.snapshot}</skip>
                </configuration>
            </plugin>
            <!-- WAR CONFIGURATION -->
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.3</version>
                <configuration>
                    <packagingExcludes>WEB-INF/web.xml</packagingExcludes>
                </configuration>
            </plugin>
            <!-- TOMEE CONFIGURATION -->
            <plugin>
                <groupId>org.apache.tomee.maven</groupId>
                <artifactId>tomee-maven-plugin</artifactId>
                <version>${tomee.version}</version>
                <configuration>
                    <simpleLog>true</simpleLog>
                    <tomeeVersion>${tomee.version}</tomeeVersion>
                    <tomeeClassifier>plus</tomeeClassifier>
                </configuration>
            </plugin>
            <!-- TOMEE EMBEDDED CONFIGURATION -->
            <plugin>
                <groupId>org.apache.tomee.maven</groupId>
                <artifactId>tomee-embedded-maven-plugin</artifactId>
                <version>${tomee.version}</version>
            </plugin>
            <!-- AUTOMATED LICENSE HEADER -->
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <basedir>${basedir}</basedir>
                    <header>assets/header.txt</header>
                    <quiet>false</quiet>
                    <failIfMissing>true</failIfMissing>
                    <aggregate>true</aggregate>
                    <strictCheck>true</strictCheck>
                    <includes>
                        <include>**/src/**</include>
                    </includes>
                    <useDefaultExcludes>true</useDefaultExcludes>
                    <mapping>
                        <ecmd>XML_STYLE</ecmd>
                        <mwe>XML_STYLE</mwe>
                        <ext>SLASHSTAR_STYLE</ext>
                        <xpt>XML_STYLE</xpt>
                        <java>SLASHSTAR_STYLE</java>
                        <kt>SLASHSTAR_STYLE</kt>
                        <aj>SLASHSTAR_STYLE</aj>
                        <properties>SCRIPT_STYLE</properties>
                        <xml>XML_STYLE</xml>
                    </mapping>
                    <useDefaultMapping>false</useDefaultMapping>
                    <encoding>UTF-8</encoding>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- ATTACHING SOURCE JAR WHEN PACKAGING -->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- ATTACHING JAVADOC JAR WHEN PACKAGING + MARKDOWN JAVADOC -->
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.1.1</version>
                <configuration>
                    <doclet>ch.raffael.doclets.pegdown.PegdownDoclet</doclet>
                    <docletArtifact>
                        <groupId>ch.raffael.pegdown-doclet</groupId>
                        <artifactId>pegdown-doclet</artifactId>
                        <version>1.1</version>
                    </docletArtifact>
                    <useStandardDocletOptions>true</useStandardDocletOptions>
                    <failOnError>false</failOnError>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- MANAGING DOCKER IMAGE FROM MAVEN -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-maven-plugin</artifactId>
                <version>4.3.1</version>
                <configuration>
                    <images>
                        <image>
                            <name>%g/%a:%l</name>
                            <build>
                                <dockerFile>${project.basedir}/Dockerfile</dockerFile>
                            </build>
                        </image>
                    </images>
                    <authConfig>
                        <!--suppress UnresolvedMavenProperty -->
                        <username>${env.DOCKER_USERNAME}</username>
                        <!--suppress UnresolvedMavenProperty -->
                        <password>${env.DOCKER_KEY}</password>
                    </authConfig>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
